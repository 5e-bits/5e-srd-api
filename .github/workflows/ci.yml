# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 5e SRD API CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [build_application]

env:
  REGISTRY: ghcr.io

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
      - name: Use Node.js 22.x
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # @v4.4.0
        with:
          node-version: 22.x
      - run: npm install
      - name: Lint Code
        run: npm run lint
      - name: Validate OpenAPI Spec
        run: npm run validate-swagger

  unit:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
      - name: Use Node.js 22.x
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # @v4.4.0
        with:
          node-version: 22.x
      - run: npm install
      - run: npm run test:unit

  integration:
    name: Run Integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
      - run: npm run test:integration:local

  deploy:
    name: Trigger Heroku Deploy
    runs-on: ubuntu-latest
    needs: [unit, lint, integration]
    if: ${{ github.ref == 'refs/heads/main' && github.repository == '5e-bits/5e-srd-api' }}
    steps:
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
      - uses: akhileshns/heroku-deploy@e3eb99d45a8e2ec5dca08735e089607befa4bf28 # @v3.14.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'dnd-5e-srd-api'
          heroku_email: 'cdurianward@gmail.com'

  github-release:
    name: Github Release
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ github.event_name == 'push' && github.repository == '5e-bits/5e-srd-api' }}
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published}}
      version: ${{ steps.semantic.outputs.new_release_version }}
    permissions:
      contents: write
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # Use a specific version
        with:
          # These secrets will be resolved from Org or Repo level
          app_id: ${{ secrets.SEMANTIC_RELEASE_APP_ID }}
          private_key: ${{ secrets.SEMANTIC_RELEASE_APP_PRIVATE_KEY }}
      - name: Checkout latest code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }} # Use generated token
      - name: Use Node.js 22.x
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # @v4.4.0
        with:
          node-version: 22.x
      - name: Install Dependencies
        run: npm ci
      - name: Build Artifacts
        run: |
          npm run bundle-swagger
          npm run gen-postman
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@16ca923e6ccbb50770c415a0ccd43709a8c5f7a4 # @v4.2.2
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  container-release:
    name: Container Release
    runs-on: ubuntu-latest
    needs: [github-release]
    if: ${{needs.github-release.outputs.new_release_published == 'true' && github.repository == '5e-bits/5e-srd-api'}}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # @v4.2.2
      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # @v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # @v6.18.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.github-release.outputs.version }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: version=${{ needs.github-release.outputs.version }}
