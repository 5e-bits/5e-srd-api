{
  "openapi": "3.0.1",
  "info": {
    "title": "D&D 5e API",
    "description": "Just a simple api for things within the Official 5th Edition SRD and easily accessible through a modern RESTful API.",
    "version": "0.1",
    "license": {
      "name": "MIT License",
      "url": "https://github.com/5e-bits/5e-srd-api/blob/main/LICENSE.md"
    },
    "contact": {
      "name": "5eBits",
      "url": "https://github.com/5e-bits"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api": {
      "get": {
        "summary": "Get all endpoint urls.",
        "tags": [
          "Base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/{endpoint}": {
      "get": {
        "summary": "Get list of resources for an endpoint.",
        "tags": [
          "Resource Lists"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ability-scores",
                "alignments",
                "backgrounds",
                "classes",
                "conditions",
                "damage-types",
                "equipment",
                "equipment-categories",
                "feats",
                "features",
                "languages",
                "magic-items",
                "magic-schools",
                "monsters",
                "proficiencies",
                "races",
                "rule-sections",
                "rules",
                "skills",
                "spells",
                "subclasses",
                "subraces",
                "traits",
                "weapon-properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/ability-scores/{index}": {
      "get": {
        "summary": "Get an ability score by index.",
        "description": "# Ability Score\n\nEach of a creature’s abilities has a score, a number that defines the \nmagnitude of that ability. An ability score is not just a measure of innate \ncapabilities, but also encompasses a creature’s training and competence in \nactivities related to that ability.\n",
        "tags": [
          "Character Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ability-score-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbilityScore"
                },
                "example": {
                  "index": "cha",
                  "name": "CHA",
                  "url": "/api/ability-scores/cha",
                  "desc": [
                    "Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.",
                    "A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills reflect aptitude in certain kinds of Charisma checks."
                  ],
                  "full_name": "Charisma",
                  "skills": [
                    {
                      "index": "deception",
                      "name": "Deception",
                      "url": "/api/skills/deception"
                    },
                    {
                      "index": "intimidation",
                      "name": "Intimidation",
                      "url": "/api/skills/intimidation"
                    },
                    {
                      "index": "performance",
                      "name": "Performance",
                      "url": "/api/skills/performance"
                    },
                    {
                      "index": "persuasion",
                      "name": "Persuasion",
                      "url": "/api/skills/persuasion"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/alignments/{index}": {
      "get": {
        "summary": "Get an alignment by index.",
        "description": "# Alignment\n\nA typical creature in the game world has an alignment, which broadly \ndescribes its moral and personal attitudes. Alignment is a combination of \ntwo factors: one identifies morality (good, evil, or neutral), and the other \ndescribes attitudes toward society and order (lawful, chaotic, or neutral). \nThus, nine distinct alignments define the possible combinations.\n",
        "tags": [
          "Character Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/alignment-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alignment"
                },
                "example": {
                  "index": "chaotic-neutral",
                  "name": "Chaotic Neutral",
                  "url": "/api/alignments/chaotic-neutral",
                  "desc": "Chaotic neutral (CN) creatures follow their whims, holding their personal freedom above all else. Many barbarians and rogues, and some bards, are chaotic neutral.",
                  "abbreviation": "CN"
                }
              }
            }
          }
        }
      }
    },
    "/api/backgrounds/{index}": {
      "get": {
        "summary": "Get a background by index.",
        "description": "# Background\n\nEvery story has a beginning. Your character’s background reveals where you \ncame from, how you became an adventurer, and your place in the world. Your \nfighter might have been a courageous knight or a grizzled soldier. Your \nwizard could have been a sage or an artisan. Your rogue might have gotten \nby as a guild thief or commanded audiences as a jester.\"\n",
        "tags": [
          "Backgrounds"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/background-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Background"
                },
                "example": {
                  "index": "acolyte",
                  "name": "Acolyte",
                  "starting_proficiencies": [
                    {
                      "index": "skill-insight",
                      "name": "Skill: Insight",
                      "url": "/api/proficiencies/skill-insight"
                    },
                    {
                      "index": "skill-religion",
                      "name": "Skill: Religion",
                      "url": "/api/proficiencies/skill-religion"
                    }
                  ],
                  "language_options": {
                    "choose": 2,
                    "type": "languages",
                    "from": [
                      {
                        "index": "common",
                        "name": "Common",
                        "url": "/api/languages/common"
                      },
                      {
                        "index": "dwarvish",
                        "name": "Dwarvish",
                        "url": "/api/languages/dwarvish"
                      },
                      {
                        "index": "elvish",
                        "name": "Elvish",
                        "url": "/api/languages/elvish"
                      },
                      {
                        "index": "giant",
                        "name": "Giant",
                        "url": "/api/languages/giant"
                      },
                      {
                        "index": "gnomish",
                        "name": "Gnomish",
                        "url": "/api/languages/gnomish"
                      },
                      {
                        "index": "goblin",
                        "name": "Goblin",
                        "url": "/api/languages/goblin"
                      },
                      {
                        "index": "halfling",
                        "name": "Halfling",
                        "url": "/api/languages/halfling"
                      },
                      {
                        "index": "orc",
                        "name": "Orc",
                        "url": "/api/languages/orc"
                      },
                      {
                        "index": "abyssal",
                        "name": "Abyssal",
                        "url": "/api/languages/abyssal"
                      },
                      {
                        "index": "celestial",
                        "name": "Celestial",
                        "url": "/api/languages/celestial"
                      },
                      {
                        "index": "draconic",
                        "name": "Draconic",
                        "url": "/api/languages/draconic"
                      },
                      {
                        "index": "deep-speech",
                        "name": "Deep Speech",
                        "url": "/api/languages/deep-speech"
                      },
                      {
                        "index": "infernal",
                        "name": "Infernal",
                        "url": "/api/languages/infernal"
                      },
                      {
                        "index": "primordial",
                        "name": "Primordial",
                        "url": "/api/languages/primordial"
                      },
                      {
                        "index": "sylvan",
                        "name": "Sylvan",
                        "url": "/api/languages/sylvan"
                      },
                      {
                        "index": "undercommon",
                        "name": "Undercommon",
                        "url": "/api/languages/undercommon"
                      }
                    ]
                  },
                  "starting_equipment": [
                    {
                      "equipment": {
                        "index": "clothes-common",
                        "name": "Clothes, common",
                        "url": "/api/equipment/clothes-common"
                      },
                      "quantity": 1
                    },
                    {
                      "equipment": {
                        "index": "pouch",
                        "name": "Pouch",
                        "url": "/api/equipment/pouch"
                      },
                      "quantity": 1
                    }
                  ],
                  "starting_equipment_options": [
                    {
                      "choose": 1,
                      "type": "equipment",
                      "from": [
                        {
                          "equipment_category": {
                            "index": "holy-symbols",
                            "name": "Holy Symbols",
                            "url": "/api/equipment-categories/holy-symbols"
                          }
                        }
                      ]
                    }
                  ],
                  "feature": {
                    "name": "Shelter of the Faithful",
                    "desc": [
                      "As an acolyte, you command the respect of those who share your faith, and you can perform the religious ceremonies of your deity. You and your adventuring companions can expect to receive free healing and care at a temple, shrine, or other established presence of your faith, though you must provide any material components needed for spells. Those who share your religion will support you (but only you) at a modest lifestyle.",
                      "You might also have ties to a specific temple dedicated to your chosen deity or pantheon, and you have a residence there. This could be the temple where you used to serve, if you remain on good terms with it, or a temple where you have found a new home. While near your temple, you can call upon the priests for assistance, provided the assistance you ask for is not hazardous and you remain in good standing with your temple."
                    ]
                  },
                  "personality_traits": {
                    "choose": 2,
                    "type": "personality_traits",
                    "from": [
                      "I idolize a particular hero of my faith, and constantly refer to that person's deeds and example.",
                      "I can find common ground between the fiercest enemies, empathizing with them and always working toward peace.",
                      "I see omens in every event and action. The gods try to speak to us, we just need to listen.",
                      "Nothing can shake my optimistic attitude.",
                      "I quote (or misquote) sacred texts and proverbs in almost every situation.",
                      "I am tolerant (or intolerant) of other faiths and respect (or condemn) the worship of other gods.",
                      "I've enjoyed fine food, drink, and high society among my temple's elite. Rough living grates on me.",
                      "I've spent so long in the temple that I have little practical experience dealing with people in the outside world."
                    ]
                  },
                  "ideals": {
                    "choose": 1,
                    "type": "ideals",
                    "from": [
                      {
                        "desc": "Tradition. The ancient traditions of worship and sacrifice must be preserved and upheld.",
                        "alignments": [
                          {
                            "index": "lawful-good",
                            "name": "Lawful Good",
                            "url": "/api/alignments/lawful-good"
                          },
                          {
                            "index": "lawful-neutral",
                            "name": "Lawful Neutral",
                            "url": "/api/alignments/lawful-neutral"
                          },
                          {
                            "index": "lawful-evil",
                            "name": "Lawful Evil",
                            "url": "/api/alignments/lawful-evil"
                          }
                        ]
                      },
                      {
                        "desc": "Charity. I always try to help those in need, no matter what the personal cost.",
                        "alignments": [
                          {
                            "index": "lawful-good",
                            "name": "Lawful Good",
                            "url": "/api/alignments/lawful-good"
                          },
                          {
                            "index": "neutral-good",
                            "name": "Neutral Good",
                            "url": "/api/alignments/neutral-good"
                          },
                          {
                            "index": "chaotic-good",
                            "name": "Chaotic Good",
                            "url": "/api/alignments/chaotic-good"
                          }
                        ]
                      },
                      {
                        "desc": "Change. We must help bring about the changes the gods are constantly working in the world.",
                        "alignments": [
                          {
                            "index": "chaotic-good",
                            "name": "Chaotic Good",
                            "url": "/api/alignments/chaotic-good"
                          },
                          {
                            "index": "chaotic-neutral",
                            "name": "Chaotic Neutral",
                            "url": "/api/alignments/chaotic-neutral"
                          },
                          {
                            "index": "chaotic-evil",
                            "name": "Chaotic Evil",
                            "url": "/api/alignments/chaotic-evil"
                          }
                        ]
                      },
                      {
                        "desc": "Power. I hope to one day rise to the top of my faith's religious hierarchy.",
                        "alignments": [
                          {
                            "index": "lawful-good",
                            "name": "Lawful Good",
                            "url": "/api/alignments/lawful-good"
                          },
                          {
                            "index": "lawful-neutral",
                            "name": "Lawful Neutral",
                            "url": "/api/alignments/lawful-neutral"
                          },
                          {
                            "index": "lawful-evil",
                            "name": "Lawful Evil",
                            "url": "/api/alignments/lawful-evil"
                          }
                        ]
                      },
                      {
                        "desc": "Faith. I trust that my deity will guide my actions. I have faith that if I work hard, things will go well.",
                        "alignments": [
                          {
                            "index": "lawful-good",
                            "name": "Lawful Good",
                            "url": "/api/alignments/lawful-good"
                          },
                          {
                            "index": "lawful-neutral",
                            "name": "Lawful Neutral",
                            "url": "/api/alignments/lawful-neutral"
                          },
                          {
                            "index": "lawful-evil",
                            "name": "Lawful Evil",
                            "url": "/api/alignments/lawful-evil"
                          }
                        ]
                      },
                      {
                        "desc": "Aspiration. I seek to prove myself worthy of my god's favor by matching my actions against his or her teachings.",
                        "alignments": [
                          {
                            "index": "lawful-good",
                            "name": "Lawful Good",
                            "url": "/api/alignments/lawful-good"
                          },
                          {
                            "index": "neutral-good",
                            "name": "Neutral Good",
                            "url": "/api/alignments/neutral-good"
                          },
                          {
                            "index": "chaotic-good",
                            "name": "Chaotic Good",
                            "url": "/api/alignments/chaotic-good"
                          },
                          {
                            "index": "lawful-neutral",
                            "name": "Lawful Neutral",
                            "url": "/api/alignments/lawful-neutral"
                          },
                          {
                            "index": "neutral",
                            "name": "Neutral",
                            "url": "/api/alignments/neutral"
                          },
                          {
                            "index": "chaotic-neutral",
                            "name": "Chaotic Neutral",
                            "url": "/api/alignments/chaotic-neutral"
                          },
                          {
                            "index": "lawful-evil",
                            "name": "Lawful Evil",
                            "url": "/api/alignments/lawful-evil"
                          },
                          {
                            "index": "neutral-evil",
                            "name": "Neutral Evil",
                            "url": "/api/alignments/neutral-evil"
                          },
                          {
                            "index": "chaotic-evil",
                            "name": "Chaotic Evil",
                            "url": "/api/alignments/chaotic-evil"
                          }
                        ]
                      }
                    ]
                  },
                  "bonds": {
                    "choose": 1,
                    "type": "bonds",
                    "from": [
                      "I would die to recover an ancient relic of my faith that was lost long ago.",
                      "I will someday get revenge on the corrupt temple hierarchy who branded me a heretic.",
                      "I owe my life to the priest who took me in when my parents died.",
                      "Everything I do is for the common people.",
                      "I will do anything to protect the temple where I served.",
                      "I seek to preserve a sacred text that my enemies consider heretical and seek to destroy."
                    ]
                  },
                  "flaws": {
                    "choose": 1,
                    "type": "flaws",
                    "from": [
                      "I judge others harshly, and myself even more severely.",
                      "I put too much trust in those who wield power within my temple's hierarchy.",
                      "My piety sometimes leads me to blindly trust those that profess faith in my god.",
                      "I am inflexible in my thinking.",
                      "I am suspicious of strangers and expect the worst of them.",
                      "Once I pick a goal, I become obsessed with it to the detriment of everything else in my life."
                    ]
                  },
                  "url": "/api/backgrounds/acolyte"
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}": {
      "get": {
        "summary": "Get a class by index.",
        "description": "# Class \n\nA character class is a fundamental part of the identity and nature of \ncharacters in the Dungeons & Dragons role-playing game. A character's \ncapabilities, strengths, and weaknesses are largely defined by its class. \nA character's class affects a character's available skills and abilities.\n",
        "tags": [
          "Class"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                },
                "example": {
                  "class_levels": "/api/classes/barbarian/levels",
                  "hit_die": 12,
                  "index": "barbarian",
                  "multi_classing": {
                    "prerequisites": [
                      {
                        "ability_score": {
                          "index": "str",
                          "name": "STR",
                          "url": "/api/ability-scores/str"
                        },
                        "minimum_score": 13
                      }
                    ],
                    "proficiencies": [
                      {
                        "index": "shields",
                        "name": "Shields",
                        "url": "/api/proficiencies/shields"
                      },
                      {
                        "index": "simple-weapons",
                        "name": "Simple Weapons",
                        "url": "/api/proficiencies/simple-weapons"
                      },
                      {
                        "index": "martial-weapons",
                        "name": "Martial Weapons",
                        "url": "/api/proficiencies/martial-weapons"
                      }
                    ],
                    "proficiency_choices": []
                  },
                  "name": "Barbarian",
                  "proficiencies": [
                    {
                      "index": "light-armor",
                      "name": "Light Armor",
                      "url": "/api/proficiencies/light-armor"
                    },
                    {
                      "index": "medium-armor",
                      "name": "Medium Armor",
                      "url": "/api/proficiencies/medium-armor"
                    },
                    {
                      "index": "shields",
                      "name": "Shields",
                      "url": "/api/proficiencies/shields"
                    },
                    {
                      "index": "simple-weapons",
                      "name": "Simple Weapons",
                      "url": "/api/proficiencies/simple-weapons"
                    },
                    {
                      "index": "martial-weapons",
                      "name": "Martial Weapons",
                      "url": "/api/proficiencies/martial-weapons"
                    }
                  ],
                  "proficiency_choices": [
                    {
                      "choose": 2,
                      "from": [
                        {
                          "index": "skill-animal-handling",
                          "name": "Skill: Animal Handling",
                          "url": "/api/proficiencies/skill-animal-handling"
                        },
                        {
                          "index": "skill-athletics",
                          "name": "Skill: Athletics",
                          "url": "/api/proficiencies/skill-athletics"
                        },
                        {
                          "index": "skill-intimidation",
                          "name": "Skill: Intimidation",
                          "url": "/api/proficiencies/skill-intimidation"
                        },
                        {
                          "index": "skill-nature",
                          "name": "Skill: Nature",
                          "url": "/api/proficiencies/skill-nature"
                        },
                        {
                          "index": "skill-perception",
                          "name": "Skill: Perception",
                          "url": "/api/proficiencies/skill-perception"
                        },
                        {
                          "index": "skill-survival",
                          "name": "Skill: Survival",
                          "url": "/api/proficiencies/skill-survival"
                        }
                      ],
                      "type": "proficiencies"
                    }
                  ],
                  "saving_throws": [
                    {
                      "index": "str",
                      "name": "STR",
                      "url": "/api/ability-scores/str"
                    },
                    {
                      "index": "con",
                      "name": "CON",
                      "url": "/api/ability-scores/con"
                    }
                  ],
                  "starting_equipment": [
                    {
                      "equipment": {
                        "index": "explorers-pack",
                        "name": "Explorer's Pack",
                        "url": "/api/equipment/explorers-pack"
                      },
                      "quantity": 1
                    },
                    {
                      "equipment": {
                        "index": "javelin",
                        "name": "Javelin",
                        "url": "/api/equipment/javelin"
                      },
                      "quantity": 4
                    }
                  ],
                  "starting_equipment_options": [
                    {
                      "choose": 1,
                      "from": [
                        {
                          "equipment": {
                            "index": "greataxe",
                            "name": "Greataxe",
                            "url": "/api/equipment/greataxe"
                          },
                          "quantity": 1
                        },
                        {
                          "equipment_option": {
                            "choose": 1,
                            "from": {
                              "equipment_category": {
                                "index": "martial-melee-weapons",
                                "name": "Martial Melee Weapons",
                                "url": "/api/equipment-categories/martial-melee-weapons"
                              }
                            },
                            "type": "equipment"
                          }
                        }
                      ],
                      "type": "equipment"
                    },
                    {
                      "choose": 1,
                      "from": [
                        {
                          "equipment": {
                            "index": "handaxe",
                            "name": "Handaxe",
                            "url": "/api/equipment/handaxe"
                          },
                          "quantity": 2
                        },
                        {
                          "equipment_option": {
                            "choose": 1,
                            "from": {
                              "equipment_category": {
                                "index": "simple-weapons",
                                "name": "Simple Weapons",
                                "url": "/api/equipment-categories/simple-weapons"
                              }
                            },
                            "type": "equipment"
                          }
                        }
                      ],
                      "type": "equipment"
                    }
                  ],
                  "subclasses": [
                    {
                      "index": "berserker",
                      "name": "Berserker",
                      "url": "/api/subclasses/berserker"
                    }
                  ],
                  "url": "/api/classes/barbarian"
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/subclasses": {
      "get": {
        "summary": "Get subclasses available for a class.",
        "tags": [
          "Class Resource Lists"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                },
                "example": {
                  "count": 1,
                  "results": [
                    {
                      "index": "berserker",
                      "name": "Berserker",
                      "url": "/api/subclasses/berserker"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/spells": {
      "get": {
        "summary": "Get spells available for a class.",
        "tags": [
          "Class Resource Lists"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                },
                "example": {
                  "count": 2,
                  "results": [
                    {
                      "index": "power-word-kill",
                      "name": "Power Word Kill",
                      "url": "/api/spells/power-word-kill"
                    },
                    {
                      "index": "true-polymorph",
                      "name": "True Polymorph",
                      "url": "/api/spells/true-polymorph"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/spellcasting": {
      "get": {
        "summary": "Get spellcasting info for a class.",
        "tags": [
          "Class"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Spellcasting"
                },
                "example": {
                  "level": 1,
                  "spellcasting_ability": {
                    "index": "cha",
                    "name": "CHA",
                    "url": "/api/ability-scores/cha"
                  },
                  "info": [
                    {
                      "name": "Cantrips",
                      "desc": [
                        "You know two cantrips of your choice from the bard spell list. You learn additional bard cantrips of your choice at higher levels, as shown in the Cantrips Known column of the Bard table."
                      ]
                    },
                    {
                      "name": "Spell Slots",
                      "desc": [
                        "The Bard table shows how many spell slots you have to cast your spells of 1st level and higher. To cast one of these spells, you must expend a slot of the spell's level or higher. You regain all expended spell slots when you finish a long rest.",
                        "For example, if you know the 1st-level spell cure wounds and have a 1st-level and a 2nd-level spell slot available, you can cast cure wounds using either slot."
                      ]
                    },
                    {
                      "name": "Spells Known of 1st Level and Higher",
                      "desc": [
                        "You know four 1st-level spells of your choice from the bard spell list.",
                        "The Spells Known column of the Bard table shows when you learn more bard spells of your choice.",
                        "Each of these spells must be of a level for which you have spell slots, as shown on the table. For instance, when you reach 3rd level in this class, you can learn one new spell of 1st or 2nd level.",
                        "Additionally, when you gain a level in this class, you can choose one of the bard spells you know and replace it with another spell from the bard spell list, which also must be of a level for which you have spell slots."
                      ]
                    },
                    {
                      "name": "Spellcasting Ability",
                      "desc": [
                        "Charisma is your spellcasting ability for your bard spells. Your magic comes from the heart and soul you pour into the performance of your music or oration. You use your Charisma whenever a spell refers to your spellcasting ability. In addition, you use your Charisma modifier when setting the saving throw DC for a bard spell you cast and when making an attack roll with one.",
                        "Spell save DC = 8 + your proficiency bonus + your Charisma modifier.",
                        "Spell attack modifier = your proficiency bonus + your Charisma modifier."
                      ]
                    },
                    {
                      "name": "Ritual Casting",
                      "desc": [
                        "You can cast any bard spell you know as a ritual if that spell has the ritual tag."
                      ]
                    },
                    {
                      "name": "Spellcasting Focus",
                      "desc": [
                        "You can use a musical instrument (see Equipment) as a spellcasting focus for your bard spells."
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/features": {
      "get": {
        "summary": "Get features available for a class.",
        "tags": [
          "Class Resource Lists"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of features for the class.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/proficiencies": {
      "get": {
        "summary": "Get proficiencies available for a class.",
        "tags": [
          "Class Resource Lists"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of proficiencies for the class.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/multi-classing": {
      "get": {
        "summary": "Get multiclassing resource for a class.",
        "tags": [
          "Class"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Multiclassing"
                },
                "example": {
                  "prerequisites": [
                    {
                      "ability_score": {
                        "index": "str",
                        "name": "STR",
                        "url": "/api/ability-scores/str"
                      },
                      "minimum_score": 13
                    }
                  ],
                  "proficiencies": [
                    {
                      "index": "shields",
                      "name": "Shields",
                      "url": "/api/proficiencies/shields"
                    },
                    {
                      "index": "simple-weapons",
                      "name": "Simple Weapons",
                      "url": "/api/proficiencies/simple-weapons"
                    },
                    {
                      "index": "martial-weapons",
                      "name": "Martial Weapons",
                      "url": "/api/proficiencies/martial-weapons"
                    }
                  ],
                  "proficiency_choices": []
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/levels": {
      "get": {
        "summary": "Get all level resources for a class.",
        "tags": [
          "Class Levels"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClassLevel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/levels/{class_level}": {
      "get": {
        "summary": "Get level resource for a class and level.",
        "tags": [
          "Class Levels"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          },
          {
            "$ref": "#/components/parameters/class-level"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassLevel"
                },
                "example": {
                  "level": 1,
                  "ability_score_bonuses": 0,
                  "prof_bonus": 2,
                  "features": [
                    {
                      "index": "rage",
                      "name": "Rage",
                      "url": "/api/features/rage"
                    },
                    {
                      "index": "barbarian-unarmored-defense",
                      "name": "Unarmored Defense",
                      "url": "/api/features/barbarian-unarmored-defense"
                    }
                  ],
                  "class_specific": {
                    "creating_spell_slots": [],
                    "rage_count": 2,
                    "rage_damage_bonus": 2,
                    "brutal_critical_dice": 0
                  },
                  "index": "barbarian-1",
                  "class": {
                    "index": "barbarian",
                    "name": "Barbarian",
                    "url": "/api/classes/barbarian"
                  },
                  "url": "/api/classes/barbarian/levels/1"
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/levels/{class_level}/features": {
      "get": {
        "summary": "Get features available to a class at the requested level.",
        "tags": [
          "Class Levels"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          },
          {
            "$ref": "#/components/parameters/class-level"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                },
                "example": {
                  "count": 2,
                  "results": [
                    {
                      "index": "barbarian-unarmored-defense",
                      "name": "Unarmored Defense",
                      "url": "/api/features/barbarian-unarmored-defense"
                    },
                    {
                      "index": "rage",
                      "name": "Rage",
                      "url": "/api/features/rage"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/classes/{index}/levels/{spell_level}/spells": {
      "get": {
        "summary": "Get spells of the requested level available to the class.",
        "tags": [
          "Class Levels"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/class-index"
          },
          {
            "$ref": "#/components/parameters/spell-level"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                },
                "example": {
                  "count": 5,
                  "results": [
                    {
                      "index": "dominate-monster",
                      "name": "Dominate Monster",
                      "url": "/api/spells/dominate-monster"
                    },
                    {
                      "index": "earthquake",
                      "name": "Earthquake",
                      "url": "/api/spells/earthquake"
                    },
                    {
                      "index": "incendiary-cloud",
                      "name": "Incendiary Cloud",
                      "url": "/api/spells/incendiary-cloud"
                    },
                    {
                      "index": "power-word-stun",
                      "name": "Power Word Stun",
                      "url": "/api/spells/power-word-stun"
                    },
                    {
                      "index": "sunburst",
                      "name": "Sunburst",
                      "url": "/api/spells/sunburst"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/conditions/{index}": {
      "get": {
        "summary": "Get a condition by index.",
        "description": "# Condition\n\nA condition alters a creature’s capabilities in a variety of ways and can \narise as a result of a spell, a class feature, a monster’s attack, or other \neffect. Most conditions, such as blinded, are impairments, but a few, such \nas invisible, can be advantageous.\n",
        "tags": [
          "Game Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/condition-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                },
                "example": {
                  "index": "blinded",
                  "name": "Blinded",
                  "url": "/api/conditions/blinded",
                  "desc": [
                    "- A blinded creature can't see and automatically fails any ability check that requires sight.",
                    "- Attack rolls against the creature have advantage, and the creature's attack rolls have disadvantage."
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/damage-types/{index}": {
      "get": {
        "summary": "Get a damage type by index.",
        "description": "# Damage type\n\nDifferent attacks, damaging spells, and other harmful effects deal different \ntypes of damage. Damage types have no rules of their own, but other rules, \nsuch as damage resistance, rely on the types.\n",
        "tags": [
          "Game Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/damage-type-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamageType"
                },
                "example": {
                  "index": "acid",
                  "name": "Acid",
                  "url": "/api/damage-types/acid",
                  "desc": [
                    "The corrosive spray of a black dragon's breath and the dissolving enzymes secreted by a black pudding deal acid damage."
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/equipment/{index}": {
      "get": {
        "summary": "Get an equipment item by index.",
        "description": "# Equipment\n\nOpportunities abound to find treasure, equipment, weapons, armor, and more \nin the dungeons you explore. Normally, you can sell your treasures and \ntrinkets when you return to a town or other settlement, provided that you \ncan find buyers and merchants interested in your loot.\n",
        "tags": [
          "Equipment"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/equipment-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                },
                "example": {
                  "category_range": "Simple Melee",
                  "contents": [],
                  "cost": {
                    "quantity": 1,
                    "unit": "sp"
                  },
                  "damage": {
                    "damage_dice": "1d4",
                    "damage_type": {
                      "index": "bludgeoning",
                      "name": "Bludgeoning",
                      "url": "/api/damage-types/bludgeoning"
                    }
                  },
                  "desc": [],
                  "equipment_category": {
                    "index": "weapon",
                    "name": "Weapon",
                    "url": "/api/equipment-categories/weapon"
                  },
                  "index": "club",
                  "name": "Club",
                  "properties": [
                    {
                      "index": "light",
                      "name": "Light",
                      "url": "/api/weapon-properties/light"
                    },
                    {
                      "index": "monk",
                      "name": "Monk",
                      "url": "/api/weapon-properties/monk"
                    }
                  ],
                  "range": {
                    "long": null,
                    "normal": 5
                  },
                  "special": [],
                  "url": "/api/equipment/club",
                  "weapon_category": "Simple",
                  "weapon_range": "Melee",
                  "weight": 2
                }
              }
            }
          }
        }
      }
    },
    "/api/equipment-categories/{index}": {
      "get": {
        "summary": "Get an equipment category by index.",
        "description": "These are the categories that various equipment fall under.",
        "tags": [
          "Equipment"
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "description": "The `index` of the equipment category score to get.\n\nAvailable values can be found in the resource list for this endpoint.\n",
            "schema": {
              "type": "string"
            },
            "example": "waterborne-vehicles"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentCategory"
                },
                "example": {
                  "index": "waterborne-vehicles",
                  "name": "Waterborne Vehicles",
                  "url": "/api/equipment-categories/waterborne-vehicles",
                  "equipment": [
                    {
                      "index": "galley",
                      "name": "Galley",
                      "url": "/api/equipment/galley"
                    },
                    {
                      "index": "keelboat",
                      "name": "Keelboat",
                      "url": "/api/equipment/keelboat"
                    },
                    {
                      "index": "longship",
                      "name": "Longship",
                      "url": "/api/equipment/longship"
                    },
                    {
                      "index": "rowboat",
                      "name": "Rowboat",
                      "url": "/api/equipment/rowboat"
                    },
                    {
                      "index": "sailing-ship",
                      "name": "Sailing ship",
                      "url": "/api/equipment/sailing-ship"
                    },
                    {
                      "index": "warship",
                      "name": "Warship",
                      "url": "/api/equipment/warship"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/feats/{index}": {
      "get": {
        "summary": "Get a feat by index.",
        "description": "# Feat \n\nA feat is a boon a character can receive at level up instead of an ability score increase.\n",
        "tags": [
          "Feats"
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "description": "The `index` of the feat to get.\n",
            "schema": {
              "type": "string",
              "enum": [
                "grappler"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feat"
                },
                "example": {
                  "index": "grappler",
                  "name": "Grappler",
                  "url": "/api/feats/grappler",
                  "desc": [
                    "You’ve developed the Skills necessary to hold your own in close--quarters Grappling. You gain the following benefits:",
                    "- You have advantage on Attack Rolls against a creature you are Grappling.",
                    "- You can use your action to try to pin a creature Grappled by you. To do so, make another grapple check. If you succeed, you and the creature are both Restrained until the grapple ends."
                  ],
                  "prerequisites": [
                    {
                      "ability_score": {
                        "index": "str",
                        "name": "STR",
                        "url": "/api/ability-scores/str"
                      },
                      "minimum_score": 13
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/features/{index}": {
      "get": {
        "summary": "Get a feature by index.",
        "description": "# Feature \n\nWhen you gain a new level in a class, you get its features for that level. \nYou don’t, however, receive the class’s starting Equipment, and a few \nfeatures have additional rules when you’re multiclassing: Channel Divinity, \nExtra Attack, Unarmored Defense, and Spellcasting.\n",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/feature-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                },
                "example": {
                  "index": "action-surge-1-use",
                  "name": "Action Surge (1 use)",
                  "url": "/api/features/action-surge-1-use",
                  "class": {
                    "index": "fighter",
                    "name": "Fighter",
                    "url": "/api/classes/fighter"
                  },
                  "desc": [
                    "Starting at 2nd level, you can push yourself beyond your normal limits for a moment. On your turn, you can take one additional action on top of your regular action and a possible bonus action.",
                    "Once you use this feature, you must finish a short or long rest before you can use it again. Starting at 17th level, you can use it twice before a rest, but only once on the same turn."
                  ],
                  "level": 2,
                  "prerequisites": []
                }
              }
            }
          }
        }
      }
    },
    "/api/languages/{index}": {
      "get": {
        "summary": "Get a language by index.",
        "description": "# Language\n\nBy virtue of your race, your character can speak, read, and write \ncertain languages.\n",
        "tags": [
          "Character Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/language-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                },
                "example": {
                  "index": "elvish",
                  "name": "Elvish",
                  "url": "/api/languages/elvish",
                  "desc": "Elvish is fluid, with subtle intonations and intricate grammar. Elven literature is rich and varied, and their songs and poems are famous among other races. Many bards learn their language so they can add Elvish ballads to their repertoires.",
                  "type": "Standard",
                  "script": "Elvish",
                  "typical_speakers": [
                    "Elves"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/magic-items/{index}": {
      "get": {
        "summary": "Get a magic item by index.",
        "description": "These are the various magic items you can find in the game.",
        "tags": [
          "Equipment"
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "description": "The `index` of the magic item to get.\n\nAvailable values can be found in the resource list for this endpoint.\n",
            "schema": {
              "type": "string"
            },
            "example": "adamantine-armor"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagicItem"
                },
                "example": {
                  "index": "adamantine-armor",
                  "name": "Adamantine Armor",
                  "url": "/api/magic-items/adamantine-armor",
                  "desc": [
                    "Armor (medium or heavy, but not hide), uncommon",
                    "This suit of armor is reinforced with adamantine, one of the hardest substances in existence. While you're wearing it, any critical hit against you becomes a normal hit."
                  ],
                  "equipment_category": {
                    "index": "armor",
                    "name": "Armor",
                    "url": "/api/equipment-categories/armor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/magic-schools/{index}": {
      "get": {
        "summary": "Get a magic school by index.",
        "description": "# Magic School\n\nAcademies of magic group spells into eight categories called schools of \nmagic. Scholars, particularly wizards, apply these categories to all spells, \nbelieving that all magic functions in essentially the same way, whether it \nderives from rigorous study or is bestowed by a deity.\n",
        "tags": [
          "Game Mechanics"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/magic-school-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagicSchool"
                },
                "example": {
                  "index": "conjuration",
                  "name": "Conjuration",
                  "url": "/api/magic-schools/conjuration",
                  "desc": "Conjuration spells involve the transportation of objects and creatures from one location to another. Some spells summon creatures or objects to the caster's side, whereas others allow the caster to teleport to another location. Some conjurations create objects or effects out of nothing."
                }
              }
            }
          }
        }
      }
    },
    "/api/proficiencies/{index}": {
      "get": {
        "summary": "Get a proficiency by index.",
        "description": "# Proficiency \n\nBy virtue of your race, your character can speak, read, and write certain Proficiencies.\n",
        "tags": [
          "Character Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/proficiency-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proficiency"
                },
                "example": {
                  "index": "medium-armor",
                  "name": "Medium Armor",
                  "url": "/api/proficiencies/medium-armor",
                  "type": "Armor",
                  "classes": [
                    {
                      "index": "barbarian",
                      "name": "Barbarian",
                      "url": "/api/classes/barbarian"
                    },
                    {
                      "index": "cleric",
                      "name": "Cleric",
                      "url": "/api/classes/cleric"
                    },
                    {
                      "index": "druid",
                      "name": "Druid",
                      "url": "/api/classes/druid"
                    },
                    {
                      "index": "ranger",
                      "name": "Ranger",
                      "url": "/api/classes/ranger"
                    }
                  ],
                  "races": [],
                  "reference": {
                    "index": "medium-armor",
                    "name": "Medium Armor",
                    "url": "/api/equipment-categories/medium-armor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/races/{index}": {
      "get": {
        "summary": "Get a race by index.",
        "description": "Each race grants your character ability and skill bonuses as well as racial traits.",
        "tags": [
          "Races"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/race-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Race"
                },
                "example": {
                  "index": "elf",
                  "name": "Elf",
                  "url": "/api/races/elf",
                  "ability_bonuses": [
                    {
                      "ability_score": {
                        "index": "dex",
                        "name": "DEX",
                        "url": "/api/ability-scores/dex"
                      },
                      "bonus": 2
                    }
                  ],
                  "age": "Although elves reach physical maturity at about the same age as humans, the elven understanding of adulthood goes beyond physical growth to encompass worldly experience. An elf typically claims adulthood and an adult name around the age of 100 and can live to be 750 years old.",
                  "alignment": "Elves love freedom, variety, and self-expression, so they lean strongly toward the gentler aspects of chaos. They value and protect others' freedom as well as their own, and they are more often good than not. The drow are an exception; their exile has made them vicious and dangerous. Drow are more often evil than not.",
                  "language_desc": "You can speak, read, and write Common and Elvish. Elvish is fluid, with subtle intonations and intricate grammar. Elven literature is rich and varied, and their songs and poems are famous among other races. Many bards learn their language so they can add Elvish ballads to their repertoires.",
                  "languages": [
                    {
                      "index": "common",
                      "name": "Common",
                      "url": "/api/languages/common"
                    },
                    {
                      "index": "elvish",
                      "name": "Elvish",
                      "url": "/api/languages/elvish"
                    }
                  ],
                  "size": "Medium",
                  "size_description": "Elves range from under 5 to over 6 feet tall and have slender builds. Your size is Medium.",
                  "speed": 30,
                  "starting_proficiencies": [
                    {
                      "index": "skill-perception",
                      "name": "Skill: Perception",
                      "url": "/api/proficiencies/skill-perception"
                    }
                  ],
                  "subraces": [
                    {
                      "index": "high-elf",
                      "name": "High Elf",
                      "url": "/api/subraces/high-elf"
                    }
                  ],
                  "traits": [
                    {
                      "index": "darkvision",
                      "name": "Darkvision",
                      "url": "/api/traits/darkvision"
                    },
                    {
                      "index": "fey-ancestry",
                      "name": "Fey Ancestry",
                      "url": "/api/traits/fey-ancestry"
                    },
                    {
                      "index": "trance",
                      "name": "Trance",
                      "url": "/api/traits/trance"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/races/{index}/subraces": {
      "get": {
        "summary": "Get subraces available for a race.",
        "tags": [
          "Races"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/race-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of subraces for the race.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/races/{index}/proficiencies": {
      "get": {
        "summary": "Get proficiencies available for a race.",
        "tags": [
          "Races"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/race-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of proficiencies for the race.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/races/{index}/traits": {
      "get": {
        "summary": "Get traits available for a race.",
        "tags": [
          "Races"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/race-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of traits for the race.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/rule-sections/{index}": {
      "get": {
        "summary": "Get a rule section by index.",
        "description": "Rule sections represent a sub-heading and text that can be found underneath a rule heading in the SRD.",
        "tags": [
          "Rules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/rule-section-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSection"
                },
                "example": {
                  "index": "time",
                  "name": "Time",
                  "url": "/api/rule-sections/time",
                  "desc": "## Time\n\nIn situations where keeping track of the passage of time is important, the GM determines the time a task requires. The GM might use a different time scale depending on the context of the situation at hand. In a dungeon environment, the adventurers' movement happens on a scale of **minutes**. It takes them about a minute to creep down a long hallway, another minute to check for traps on the door at the end of the hall, and a good ten minutes to search the chamber beyond for anything interesting or valuable.\n\nIn a city or wilderness, a scale of **hours** is often more appropriate. Adventurers eager to reach the lonely tower at the heart of the forest hurry across those fifteen miles in just under four hours' time.\n\nFor long journeys, a scale of **days** works best.\n\nFollowing the road from Baldur's Gate to Waterdeep, the adventurers spend four uneventful days before a goblin ambush interrupts their journey.\n\nIn combat and other fast-paced situations, the game relies on **rounds**, a 6-second span of time.\n"
                }
              }
            }
          }
        }
      }
    },
    "/api/rules/{index}": {
      "get": {
        "summary": "Get a rule by index.",
        "description": "# Rule \n\nRules are pages in the SRD that document the mechanics of Dungeons and Dragons. \nRules have descriptions which is the text directly underneath the rule heading \nin the SRD. Rules also have subsections for each heading underneath the rule in the SRD.\n",
        "tags": [
          "Rules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/rule-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                },
                "example": {
                  "index": "using-ability-scores",
                  "name": "Using Ability Scores",
                  "url": "/api/rules/using-ability-scores",
                  "desc": "# Using Ability Scores\n\nSix abilities provide a quick description of every creature's physical and mental characteristics:\n- **Strength**, measuring physical power\n- **Dexterity**, measuring agility\n- **Constitution**, measuring endurance\n- **Intelligence**, measuring reasoning and memory\n- **Wisdom**, measuring perception and insight\n- **Charisma**, measuring force of personality\n\nIs a character muscle-bound and insightful? Brilliant and charming? Nimble and hardy? Ability scores define these qualities-a creature's assets as well as weaknesses.\n\nThe three main rolls of the game-the ability check, the saving throw, and the attack roll-rely on the six ability scores. The book's introduction describes the basic rule behind these rolls: roll a d20, add an ability modifier derived from one of the six ability scores, and compare the total to a target number.\n\n**Ability Scores and Modifiers** Each of a creature's abilities has a score, a number that defines the magnitude of that ability. An ability score is not just a measure of innate capabilities, but also encompasses a creature's training and competence in activities related to that ability.\n\nA score of 10 or 11 is the normal human average, but adventurers and many monsters are a cut above average in most abilities. A score of 18 is the highest that a person usually reaches. Adventurers can have scores as high as 20, and monsters and divine beings can have scores as high as 30.\n\nEach ability also has a modifier, derived from the score and ranging from -5 (for an ability score of 1) to +10 (for a score of 30). The Ability Scores and Modifiers table notes the ability modifiers for the range of possible ability scores, from 1 to 30.\n",
                  "subsections": [
                    {
                      "index": "ability-scores-and-modifiers",
                      "name": "Ability Scores and Modifiers",
                      "url": "/api/rule-sections/ability-scores-and-modifiers"
                    },
                    {
                      "index": "advantage-and-disadvantage",
                      "name": "Advantage and Disadvantage",
                      "url": "/api/rule-sections/advantage-and-disadvantage"
                    },
                    {
                      "index": "proficiency-bonus",
                      "name": "Proficiency Bonus",
                      "url": "/api/rule-sections/proficiency-bonus"
                    },
                    {
                      "index": "ability-checks",
                      "name": "Ability Checks",
                      "url": "/api/rule-sections/ability-checks"
                    },
                    {
                      "index": "using-each-ability",
                      "name": "Using Each Ability",
                      "url": "/api/rule-sections/using-each-ability"
                    },
                    {
                      "index": "saving-throws",
                      "name": "Saving Throws",
                      "url": "/api/rule-sections/saving-throws"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/skills/{index}": {
      "get": {
        "summary": "Get a skill by index.",
        "description": "# Skill\n\nEach ability covers a broad range of capabilities, including skills that a \ncharacter or a monster can be proficient in. A skill represents a specific \naspect of an ability score, and an individual’s proficiency in a skill \ndemonstrates a focus on that aspect.\n",
        "tags": [
          "Character Data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/skill-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                },
                "example": {
                  "index": "acrobatics",
                  "name": "Acrobatics",
                  "url": "/api/skills/acrobatics",
                  "ability_score": {
                    "index": "dex",
                    "name": "DEX",
                    "url": "/api/ability-scores/dex"
                  },
                  "desc": [
                    "Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The GM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips."
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/spells/{index}": {
      "get": {
        "summary": "Get a spell by index.",
        "tags": [
          "Spells"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/indexParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Spell"
                }
              }
            }
          }
        }
      }
    },
    "/api/subclasses/{index}": {
      "get": {
        "summary": "Get a subclass by index.",
        "description": "Subclasses reflect the different paths a class may take as levels are gained.",
        "tags": [
          "Subclasses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subclass-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subclass"
                },
                "example": {
                  "index": "fiend",
                  "name": "Fiend",
                  "url": "/api/subclasses/fiend",
                  "class": {
                    "index": "warlock",
                    "name": "Warlock",
                    "url": "/api/classes/warlock"
                  },
                  "desc": [
                    "You have made a pact with a fiend from the lower planes of existence, a being whose aims are evil, even if you strive against those aims. Such beings desire the corruption or destruction of all things, ultimately including you. Fiends powerful enough to forge a pact include demon lords such as Demogorgon, Orcus, Fraz'Urb-luu, and Baphomet; archdevils such as Asmodeus, Dispater, Mephistopheles, and Belial; pit fiends and balors that are especially mighty; and ultroloths and other lords of the yugoloths."
                  ],
                  "spells": [
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-1",
                          "name": "Warlock 1",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/1"
                        }
                      ],
                      "spell": {
                        "index": "burning-hands",
                        "name": "Burning Hands",
                        "url": "/api/spells/burning-hands"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-1",
                          "name": "Warlock 1",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/1"
                        }
                      ],
                      "spell": {
                        "index": "command",
                        "name": "Command",
                        "url": "/api/spells/command"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-3",
                          "name": "Warlock 3",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/3"
                        }
                      ],
                      "spell": {
                        "index": "blindness-deafness",
                        "name": "Blindness/Deafness",
                        "url": "/api/spells/blindness-deafness"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-3",
                          "name": "Warlock 3",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/3"
                        }
                      ],
                      "spell": {
                        "index": "scorching-ray",
                        "name": "Scorching Ray",
                        "url": "/api/spells/scorching-ray"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-5",
                          "name": "Warlock 5",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/5"
                        }
                      ],
                      "spell": {
                        "index": "fireball",
                        "name": "Fireball",
                        "url": "/api/spells/fireball"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-5",
                          "name": "Warlock 5",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/5"
                        }
                      ],
                      "spell": {
                        "index": "stinking-cloud",
                        "name": "Stinking Cloud",
                        "url": "/api/spells/stinking-cloud"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-7",
                          "name": "Warlock 7",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/7"
                        }
                      ],
                      "spell": {
                        "index": "fire-shield",
                        "name": "Fire Shield",
                        "url": "/api/spells/fire-shield"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-7",
                          "name": "Warlock 7",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/7"
                        }
                      ],
                      "spell": {
                        "index": "wall-of-fire",
                        "name": "Wall of Fire",
                        "url": "/api/spells/wall-of-fire"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-9",
                          "name": "Warlock 9",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/9"
                        }
                      ],
                      "spell": {
                        "index": "flame-strike",
                        "name": "Flame Strike",
                        "url": "/api/spells/flame-strike"
                      }
                    },
                    {
                      "prerequisites": [
                        {
                          "index": "warlock-9",
                          "name": "Warlock 9",
                          "type": "level",
                          "url": "/api/classes/warlock/levels/9"
                        }
                      ],
                      "spell": {
                        "index": "hallow",
                        "name": "Hallow",
                        "url": "/api/spells/hallow"
                      }
                    }
                  ],
                  "subclass_flavor": "Otherworldly Patron",
                  "subclass_levels": "/api/subclasses/fiend/levels"
                }
              }
            }
          }
        }
      }
    },
    "/api/subclasses/{index}/features": {
      "get": {
        "summary": "Get features available for a subclass.",
        "tags": [
          "Subclasses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subclass-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of features for the subclass.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/subclasses/{index}/levels": {
      "get": {
        "summary": "Get all level resources for a subclass.",
        "tags": [
          "Subclasses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subclass-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of level resource for the subclass.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubclassLevel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subclasses/{index}/levels/{subclass_level}": {
      "get": {
        "summary": "Get level resources for a subclass and level.",
        "tags": [
          "Subclasses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subclass-index"
          },
          {
            "name": "subclass_level",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Level resource for the subclass and level.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubclassLevel"
                },
                "example": {
                  "index": "devotion-3",
                  "url": "/api/subclasses/devotion/levels/3",
                  "class": {
                    "index": "paladin",
                    "name": "Paladin",
                    "url": "/api/classes/paladin"
                  },
                  "features": [
                    {
                      "index": "channel-divinity",
                      "name": "Channel Divinity",
                      "url": "/api/features/channel-divinity"
                    }
                  ],
                  "level": 3,
                  "subclass": {
                    "index": "devotion",
                    "name": "Devotion",
                    "url": "/api/subclasses/devotion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subclasses/{index}/levels/{subclass_level}/features": {
      "get": {
        "summary": "Get features of the requested spell level available to the class.",
        "tags": [
          "Subclasses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subclass-index"
          },
          {
            "name": "subclass_level",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of features for the subclass and level.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/subraces/{index}": {
      "get": {
        "summary": "Get a subrace by index.",
        "description": "Subraces reflect the different varieties of a certain parent race.",
        "tags": [
          "Subraces"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subrace-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subrace"
                },
                "example": {
                  "index": "hill-dwarf",
                  "name": "Hill Dwarf",
                  "url": "/api/subraces/hill-dwarf",
                  "ability_bonuses": [
                    {
                      "ability_score": {
                        "index": "wis",
                        "name": "WIS",
                        "url": "/api/ability-scores/wis"
                      },
                      "bonus": 1
                    }
                  ],
                  "desc": "As a hill dwarf, you have keen senses, deep intuition, and remarkable resilience.",
                  "languages": [],
                  "race": {
                    "index": "dwarf",
                    "name": "Dwarf",
                    "url": "/api/races/dwarf"
                  },
                  "racial_traits": [
                    {
                      "index": "dwarven-toughness",
                      "name": "Dwarven Toughness",
                      "url": "/api/traits/dwarven-toughness"
                    }
                  ],
                  "starting_proficiencies": []
                }
              }
            }
          }
        }
      }
    },
    "/api/subraces/{index}/proficiencies": {
      "get": {
        "summary": "Get proficiences available for a subrace.",
        "tags": [
          "Subraces"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subrace-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of proficiences for the subrace.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/subraces/{index}/traits": {
      "get": {
        "summary": "Get traits available for a subrace.",
        "tags": [
          "Subraces"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/subrace-index"
          }
        ],
        "responses": {
          "200": {
            "description": "List of traits for the subrace.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIReferenceList"
                }
              }
            }
          }
        }
      }
    },
    "/api/traits/{index}": {
      "get": {
        "summary": "Get a trait by index.",
        "tags": [
          "Traits"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/indexParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trait"
                }
              }
            }
          }
        }
      }
    },
    "/api/weapon-properties/{index}": {
      "get": {
        "summary": "Get a weapon property by index.",
        "tags": [
          "Equipment"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/weapon-property-index"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeaponProperty"
                },
                "example": {
                  "index": "ammunition",
                  "name": "Ammunition",
                  "url": "/api/weapon-properties/ammunition",
                  "desc": [
                    "You can use a weapon that has the ammunition property to make a ranged attack only if you have ammunition to fire from the weapon. Each time you attack with the weapon, you expend one piece of ammunition. Drawing the ammunition from a quiver, case, or other container is part of the attack (you need a free hand to load a one-handed weapon).",
                    "At the end of the battle, you can recover half your expended ammunition by taking a minute to search the battlefield. If you use a weapon that has the ammunition property to make a melee attack, you treat the weapon as an improvised weapon (see \"Improvised Weapons\" later in the section). A sling must be loaded to deal any damage when used in this way."
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "indexParam": {
        "name": "index",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "classLevelParam": {
        "name": "class_level",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minimum": 0,
          "maximum": 20
        }
      },
      "spellLevelParam": {
        "name": "spell_level",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minimum": 0,
          "maximum": 9
        }
      },
      "ability-score-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the ability score to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "cha",
            "con",
            "dex",
            "int",
            "str",
            "wis"
          ]
        }
      },
      "alignment-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the alignment to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "chaotic-neutral",
            "chaotic-evil",
            "chaotic-good",
            "lawful-neutral",
            "lawful-evil",
            "lawful-good",
            "neutral",
            "neutral-evil",
            "neutral-good"
          ]
        }
      },
      "language-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the language to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "abyssal",
            "celestial",
            "common",
            "deep-speech",
            "draconic",
            "dwarvish",
            "elvish",
            "giant",
            "gnomish",
            "goblin",
            "halfling",
            "infernal",
            "orc",
            "primordial",
            "sylvan",
            "undercommon"
          ]
        }
      },
      "proficiency-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the proficiency to get.\n\nAvailable values can be found in the resource list for this endpoint.\n",
        "schema": {
          "type": "string"
        },
        "example": "medium-armor"
      },
      "skill-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the skill to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "acrobatics",
            "animal-handling",
            "arcana",
            "athletics",
            "deception",
            "history",
            "insight",
            "intimidation",
            "investigation",
            "medicine",
            "nature",
            "perception",
            "performance",
            "persuasion",
            "religion",
            "sleight-of-hand",
            "stealth",
            "survival"
          ]
        }
      },
      "class-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the class to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "barbarian",
            "bard",
            "cleric",
            "druid",
            "fighter",
            "monk",
            "paladin",
            "ranger",
            "rogue",
            "sorcerer",
            "warlock",
            "wizard"
          ]
        }
      },
      "class-resource": {
        "name": "resource",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "spells",
            "things"
          ]
        }
      },
      "background-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the background to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "acolyte"
          ]
        }
      },
      "weapon-property-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the weapon property to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "ammunition",
            "finesse",
            "heavy",
            "light",
            "loading",
            "monk",
            "reach",
            "special",
            "thrown",
            "two-handed",
            "versatile"
          ]
        }
      },
      "class-level": {
        "name": "class_level",
        "in": "path",
        "required": true,
        "schema": {
          "type": "number",
          "minimum": 0,
          "maximum": 20
        }
      },
      "spell-level": {
        "name": "spell_level",
        "in": "path",
        "required": true,
        "schema": {
          "type": "number",
          "minimum": 1,
          "maximum": 9
        }
      },
      "condition-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the condition to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "blinded",
            "charmed",
            "deafened",
            "exhaustion",
            "frightened",
            "grappled",
            "incapacitated",
            "invisible",
            "paralyzed",
            "petrified",
            "poisoned",
            "prone",
            "restrained",
            "stunned",
            "unconscious"
          ]
        }
      },
      "damage-type-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the damage type to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "acid",
            "bludgeoning",
            "cold",
            "fire",
            "force",
            "lightning",
            "necrotic",
            "piercing",
            "poison",
            "psychic",
            "radiant",
            "slashing",
            "thunder"
          ]
        }
      },
      "magic-school-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the magic school to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "abjuration",
            "conjuration",
            "divination",
            "enchantment",
            "evocation",
            "illusion",
            "necromancy",
            "transmutation"
          ]
        }
      },
      "equipment-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the equipment to get.\n\nAvailable values can be found in the resource list for this endpoint.\n",
        "schema": {
          "type": "string"
        },
        "example": "club"
      },
      "feature-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the feature to get.\n\nAvailable values can be found in the resource list for this endpoint.\n",
        "schema": {
          "type": "string"
        },
        "example": "action-surge-1-use"
      },
      "rule-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the rule to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "adventuring",
            "appendix",
            "combat",
            "equipment",
            "spellcasting",
            "using-ability-scores"
          ]
        }
      },
      "rule-section-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the rule section to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "ability-checks",
            "ability-scores-and-modifiers",
            "actions-in-combat",
            "advantage-and-disadvantage",
            "between-adventures",
            "casting-a-spell",
            "cover",
            "damage-and-healing",
            "diseases",
            "fantasy-historical-pantheons",
            "madness",
            "making-an-attack",
            "mounted-combat",
            "movement",
            "movement-and-position",
            "objects",
            "poisons",
            "proficiency-bonus",
            "resting",
            "saving-throws",
            "sentient-magic-items",
            "standard-exchange-rates",
            "the-environment",
            "the-order-of-combat",
            "the-planes-of-existence",
            "time",
            "traps",
            "underwater-combat",
            "using-each-ability",
            "what-is-a-spell"
          ]
        }
      },
      "race-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the race to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "dragonborn",
            "dwarf",
            "elf",
            "gnome",
            "half-elf",
            "half-orc",
            "halfling",
            "human",
            "tiefling"
          ]
        }
      },
      "subclass-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the subclass to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "berserker",
            "champion",
            "devotion",
            "draconic",
            "evocation",
            "fiend",
            "hunter",
            "land",
            "life",
            "lore",
            "open-hand",
            "thief"
          ]
        }
      },
      "subrace-index": {
        "name": "index",
        "in": "path",
        "required": true,
        "description": "The `index` of the subrace to get.\n",
        "schema": {
          "type": "string",
          "enum": [
            "high-elf",
            "hill-dwarf",
            "lightfoot-halfling",
            "rock-gnome"
          ]
        }
      }
    },
    "schemas": {
      "APIReference": {
        "type": "object",
        "properties": {
          "index": {
            "description": "The resource index for shorthand searching.",
            "type": "string"
          },
          "name": {
            "description": "The name of the referenced resource.",
            "type": "string"
          },
          "url": {
            "description": "The URL of the referenced resource.",
            "type": "string"
          }
        }
      },
      "APIReferenceList": {
        "type": "object",
        "properties": {
          "count": {
            "description": "Total number of resource available.",
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIReference"
            }
          }
        }
      },
      "Choice": {
        "type": "object",
        "properties": {
          "choose": {
            "description": "The number of items to pick from the list.",
            "type": "number"
          },
          "type": {
            "description": "The type of the resources to choose from.",
            "type": "string"
          },
          "from": {
            "description": "A list of resources to choose from.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIReference"
            }
          }
        }
      },
      "Prerequisite": {
        "type": "object",
        "properties": {
          "ability_score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/APIReference"
              }
            ]
          },
          "minimum_score": {
            "type": "number"
          }
        }
      },
      "ResourceDescription": {
        "type": "object",
        "properties": {
          "desc": {
            "description": "The description of resource.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AbilityScore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "full_name": {
                "description": "The full name for this ability score.",
                "type": "string"
              },
              "skills": {
                "description": "A list of skills that use this ability score.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "Alignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "abbreviation": {
                "description": "The abbreviation/initials/acronym for this alignment resource.",
                "type": "string"
              }
            }
          }
        ]
      },
      "Class": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "hit_die": {
                "description": "The hit die of the class. (ex: 12 == 1d12).",
                "type": "number"
              },
              "class_levels": {
                "description": "The URL of the class's level resource.",
                "type": "string"
              },
              "multi_classing": {
                "$ref": "#/components/schemas/Multiclassing"
              },
              "spellcasting": {
                "$ref": "#/components/schemas/Spellcasting"
              },
              "spells": {
                "description": "The URL of the class's spell resource list.",
                "type": "string"
              },
              "starting_equipment": {
                "description": "An object with the possible choices of equipment for new characters of this class.",
                "type": "object",
                "properties": {
                  "equipment": {
                    "$ref": "#/components/schemas/APIReference"
                  },
                  "quantity": {
                    "type": "number"
                  }
                }
              },
              "proficiency_choices": {
                "description": "Starting proficiencies where the player must choose a certain number from the given list of proficiencies.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Choice"
                }
              },
              "proficiencies": {
                "description": "Starting proficiencies all new characters of this class start with.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "saving_throws": {
                "description": "Saving throws that the class is proficient in.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "subclasses": {
                "description": "All possible subclasses that this class can specialize in.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "Damage": {
        "type": "object",
        "properties": {
          "damage_dice": {
            "type": "string"
          },
          "damage_type": {
            "$ref": "#/components/schemas/APIReference"
          }
        }
      },
      "Multiclassing": {
        "description": "Information on how to multiclass for a particular class.",
        "type": "object",
        "properties": {
          "prerequisites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prerequisite"
            }
          },
          "prerequisite_options": {
            "description": "Choice of prerequisites to meet for.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Choice"
            }
          },
          "proficiencies": {
            "description": "Proficiencies available when multiclassing.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIReference"
            }
          },
          "proficiency_choices": {
            "description": "A list of choices of proficiencies that are given when multiclassing.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Choice"
            }
          }
        }
      },
      "Spellcasting": {
        "type": "object",
        "description": "Contains information such as spells known, spellcasting ability, and cantrips known.",
        "properties": {
          "level": {
            "description": "The level at which the class can start using its Spellcasting abilities.",
            "type": "number"
          },
          "info": {
            "description": "Descriptions of the class' ability to cast spells.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Feature name.",
                  "type": "string"
                },
                "desc": {
                  "description": "Feature description.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "spellcasting_ability": {
            "description": "Reference to the attribute used for spellcasting by the class.",
            "allOf": [
              {
                "$ref": "#/components/schemas/APIReference"
              }
            ]
          }
        }
      },
      "Gear": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "equipment_category": {
                "$ref": "#/components/schemas/APIReference"
              },
              "gear_category": {
                "$ref": "#/components/schemas/APIReference"
              },
              "cost": {
                "$ref": "#/components/schemas/Cost"
              },
              "weight": {
                "description": "How much the equipment weighs.",
                "type": "number"
              }
            }
          }
        ]
      },
      "EquipmentPack": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "equipment_category": {
                "$ref": "#/components/schemas/APIReference"
              },
              "gear_category": {
                "$ref": "#/components/schemas/APIReference"
              },
              "cost": {
                "$ref": "#/components/schemas/Cost"
              },
              "contents": {
                "description": "The list of adventuring gear in the pack.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "EquipmentCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "equipment": {
                "description": "A list of the equipment that falls into this category.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "Equipment": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Weapon"
          },
          {
            "$ref": "#/components/schemas/Armor"
          },
          {
            "$ref": "#/components/schemas/Gear"
          },
          {
            "$ref": "#/components/schemas/EquipmentPack"
          }
        ]
      },
      "Cost": {
        "type": "object",
        "properties": {
          "quantity": {
            "description": "The numerical amount of coins.",
            "type": "number"
          },
          "unit": {
            "description": "The unit of coinage.",
            "type": "string"
          }
        }
      },
      "Weapon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "equipment_category": {
                "$ref": "#/components/schemas/APIReference"
              },
              "weapon_category": {
                "description": "The category of weapon this falls into.",
                "type": "string"
              },
              "weapon_range": {
                "description": "Whether this is a Melee or Ranged weapon.",
                "type": "string"
              },
              "category_range": {
                "description": "A combination of weapon_category and weapon_range.",
                "type": "string"
              },
              "range": {
                "type": "object",
                "properties": {
                  "normal": {
                    "description": "The weapon's normal range in feet.",
                    "type": "number"
                  },
                  "long": {
                    "description": "The weapon's long range in feet.",
                    "type": "number"
                  }
                }
              },
              "damage": {
                "$ref": "#/components/schemas/Damage"
              },
              "two_handed_damage": {
                "$ref": "#/components/schemas/Damage"
              },
              "properties": {
                "description": "A list of the properties this weapon has.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "cost": {
                "$ref": "#/components/schemas/Cost"
              },
              "weight": {
                "description": "How much the equipment weighs.",
                "type": "number"
              }
            }
          }
        ]
      },
      "Armor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "equipment_category": {
                "$ref": "#/components/schemas/APIReference"
              },
              "armor_category": {
                "description": "The category of armor this falls into.",
                "type": "string"
              },
              "armor_class": {
                "description": "Details on how to calculate armor class.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "str_minimum": {
                "description": "Minimum STR required to use this armor.",
                "type": "number"
              },
              "stealth_disadvantage": {
                "description": "Whether the armor gives disadvantage for Stealth.",
                "type": "boolean"
              },
              "cost": {
                "$ref": "#/components/schemas/Cost"
              },
              "weight": {
                "description": "How much the equipment weighs.",
                "type": "number"
              }
            }
          }
        ]
      },
      "MagicItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "equipment_category": {
                "$ref": "#/components/schemas/APIReference"
              }
            }
          }
        ]
      },
      "DamageType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          }
        ]
      },
      "Condition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          }
        ]
      },
      "MagicSchool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "desc": {
                "description": "Brief description of the resource.",
                "type": "string"
              }
            }
          }
        ]
      },
      "Skill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "ability_score": {
                "$ref": "#/components/schemas/APIReference"
              }
            }
          }
        ]
      },
      "Proficiency": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "description": "The general category of the proficiency.",
                "type": "string"
              },
              "classes": {
                "description": "Classes that start with this proficiency.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "races": {
                "description": "Races that start with this proficiency.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "reference": {
                "$ref": "#/components/schemas/APIReference"
              }
            }
          }
        ]
      },
      "Language": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "desc": {
                "description": "Brief description of the language.",
                "type": "string"
              },
              "type": {
                "description": "Whether the language is standard or exotic.",
                "type": "string"
              },
              "script": {
                "description": "The script used for writing in this language.",
                "type": "string"
              },
              "typical_speakers": {
                "description": "Races that tend to speak this language.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Background": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "starting_proficiencies": {
                "description": "Starting proficiencies for all new characters of this background.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "starting_equipment": {
                "description": "The starting equipment a character automatically gets.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "starting_equipment_options": {
                "description": "Starting equipment where the player must choose a certain number from the given list of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Choice"
                }
              },
              "language_options": {
                "$ref": "#/components/schemas/Choice"
              },
              "feature": {
                "description": "A special feature granted to new characters of this background.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "desc": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "personality_traits": {
                "$ref": "#/components/schemas/Choice"
              },
              "ideals": {
                "$ref": "#/components/schemas/Choice"
              },
              "bonds": {
                "$ref": "#/components/schemas/Choice"
              },
              "flaws": {
                "$ref": "#/components/schemas/Choice"
              }
            }
          }
        ]
      },
      "Feat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "prerequisites": {
                "description": "An object of APIReferences to ability scores and minimum scores.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Prerequisite"
                }
              }
            }
          }
        ]
      },
      "Subclass": {
        "description": "A path a class may take as levels are gained.",
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "class": {
                "$ref": "#/components/schemas/APIReference"
              },
              "subclass_flavor": {
                "description": "The lore-friendly flavor text for a classes respective subclass.",
                "type": "string"
              },
              "subclass_levels": {
                "description": "A resource url that shows the subclass level progression.",
                "type": "string"
              },
              "spells": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "prerequisites": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpellPrereq"
                      }
                    },
                    "spell": {
                      "$ref": "#/components/schemas/APIReference"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "SubclassLevel": {
        "type": "object",
        "properties": {
          "index": {
            "description": "The resource index for shorthand searching.",
            "type": "string"
          },
          "url": {
            "description": "The URL of the referenced resource.",
            "type": "string"
          },
          "level": {
            "description": "The number value for the current level object.",
            "type": "number"
          },
          "ability_score_bonuses": {
            "description": "Total number of ability score bonuses gained, added from previous levels.",
            "type": "number"
          },
          "prof_bonus": {
            "description": "Proficiency bonus for this class at the specified level.",
            "type": "number"
          },
          "features": {
            "description": "Features automatically gained at this level.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIReference"
            }
          },
          "spellcasting": {
            "description": "Summary of spells known at this level.",
            "type": "object",
            "properties": {
              "cantrips_known": {
                "type": "number"
              },
              "spells_known": {
                "type": "number"
              },
              "spell_slots_level_1": {
                "type": "number"
              },
              "spell_slots_level_2": {
                "type": "number"
              },
              "spell_slots_level_3": {
                "type": "number"
              },
              "spell_slots_level_4": {
                "type": "number"
              },
              "spell_slots_level_5": {
                "type": "number"
              },
              "spell_slots_level_6": {
                "type": "number"
              },
              "spell_slots_level_7": {
                "type": "number"
              },
              "spell_slots_level_8": {
                "type": "number"
              },
              "spell_slots_level_9": {
                "type": "number"
              }
            }
          },
          "classspecific": {
            "description": "Class specific information such as dice values for bard songs and number of warlock invocations.",
            "additionalProperties": {}
          }
        }
      },
      "ClassLevel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "level": {
                "description": "The number value for the current level object.",
                "type": "number"
              },
              "ability_score_bonuses": {
                "description": "Total number of ability score bonuses gained, added from previous levels.",
                "type": "number"
              },
              "prof_bonus": {
                "description": "Proficiency bonus for this class at the specified level.",
                "type": "number"
              },
              "features": {
                "description": "Features automatically gained at this level.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "spellcasting": {
                "description": "Summary of spells known at this level.",
                "type": "object",
                "properties": {
                  "cantrips_known": {
                    "type": "number"
                  },
                  "spells_known": {
                    "type": "number"
                  },
                  "spell_slots_level_1": {
                    "type": "number"
                  },
                  "spell_slots_level_2": {
                    "type": "number"
                  },
                  "spell_slots_level_3": {
                    "type": "number"
                  },
                  "spell_slots_level_4": {
                    "type": "number"
                  },
                  "spell_slots_level_5": {
                    "type": "number"
                  },
                  "spell_slots_level_6": {
                    "type": "number"
                  },
                  "spell_slots_level_7": {
                    "type": "number"
                  },
                  "spell_slots_level_8": {
                    "type": "number"
                  },
                  "spell_slots_level_9": {
                    "type": "number"
                  }
                }
              },
              "classspecific": {
                "description": "Class specific information such as dice values for bard songs and number of warlock invocations.",
                "additionalProperties": {}
              }
            }
          }
        ]
      },
      "Feature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "level": {
                "description": "The level this feature is gained.",
                "type": "number"
              },
              "class": {
                "$ref": "#/components/schemas/APIReference"
              },
              "subclass": {
                "$ref": "#/components/schemas/APIReference"
              },
              "feature_specific": {
                "description": "Information specific to this feature.",
                "additionalProperties": true
              }
            }
          }
        ]
      },
      "Race": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "speed": {
                "description": "Base move speed for this race (in feet per round).",
                "type": "number"
              },
              "ability_bonuses": {
                "description": "Racial bonuses to ability scores.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbilityBonus"
                }
              },
              "alignment": {
                "description": "Flavor description of likely alignments this race takes.",
                "type": "string"
              },
              "age": {
                "description": "Flavor description of possible ages for this race.",
                "type": "string"
              },
              "size": {
                "description": "Size class of this race.",
                "type": "string"
              },
              "size_description": {
                "description": "Flavor description of height and weight for this race.",
                "type": "string"
              },
              "starting_proficiencies": {
                "description": "Starting proficiencies for all new characters of this race.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "starting_proficiency_options": {
                "description": "Starting proficiency options for all new characters of this race.",
                "$ref": "#/components/schemas/Choice"
              },
              "languages": {
                "description": "Starting languages for all new characters of this race.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "language_desc": {
                "description": "Flavor description of the languages this race knows.",
                "type": "string"
              },
              "traits": {
                "description": "Racial traits that provide benefits to its members.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "subraces": {
                "description": "All possible subraces that this race includes.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "AbilityBonus": {
        "type": "object",
        "properties": {
          "bonus": {
            "description": "The bonus amount for this ability score.",
            "type": "number"
          },
          "ability_score": {
            "$ref": "#/components/schemas/APIReference"
          }
        }
      },
      "Spell": {
        "description": "A spell is a discrete magical effect, a single shaping of the magical energies that suffuse the multiverse into a specific, limited expression.",
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "higher_level": {
                "description": "Description for casting the spell at a higher level.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "range": {
                "description": "The range of the spell.",
                "type": "string"
              },
              "components": {
                "description": "The required components for a spell are shorthanded to V,S, and M which stand for verbal, somatic, and material.",
                "type": "string"
              },
              "material": {
                "description": "The material component for the spell to be cast.",
                "type": "string"
              },
              "ritual": {
                "description": "Determines if a spell can be cast in a 10-min(in-game) ritual.",
                "type": "boolean"
              },
              "duration": {
                "description": "How long the spell effect lasts.",
                "type": "string"
              },
              "concentration": {
                "description": "Determines if a spell needs concentration to persist.",
                "type": "boolean"
              },
              "casting_time": {
                "description": "How long it takes for the spell to activate.",
                "type": "string"
              },
              "level": {
                "description": "The level of the spell.",
                "type": "number"
              },
              "attack_type": {
                "description": "The attack type of the spell.",
                "type": "string"
              },
              "damage": {
                "type": "object",
                "properties": {
                  "damage_at_slot_level": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "damage_type": {
                    "$ref": "#/components/schemas/APIReference"
                  }
                }
              },
              "school": {
                "description": "The magic school this spell belongs to.",
                "$ref": "#/components/schemas/APIReference"
              },
              "classes": {
                "description": "The classes that are able to learn this spell.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "subclasses": {
                "description": "A list of subclasses that have access to this spell.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "Subrace": {
        "description": "subrace",
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "race": {
                "description": "The parent race for this subrace.",
                "type": "number"
              },
              "ability_bonuses": {
                "description": "Additional ability bonuses for this subrace.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AbilityBonus"
                }
              },
              "starting_proficiencies": {
                "description": "Starting proficiencies for all new characters of this subrace.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "languages": {
                "description": "Starting languages for all new characters of this subrace.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "language_options": {
                "description": "The starting languages to choose from for this subrace.",
                "$ref": "#/components/schemas/Choice"
              },
              "racial_traits": {
                "description": "Racial traits that provide benefits to its members.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "Trait": {
        "description": "trait",
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "races": {
                "description": "Races that have access to the trait.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "subraces": {
                "description": "Subaces that have access to the trait.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "proficiencies": {
                "description": "Proficiencies this trait grants.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              },
              "proficiency_choices": {
                "description": "A choice of proficiencies this trait grants.",
                "$ref": "#/components/schemas/Choice"
              },
              "trait_specific": {
                "description": "Information specific to this trait",
                "additionalProperties": true
              }
            }
          }
        ]
      },
      "WeaponProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          }
        ]
      },
      "Rule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "subsections": {
                "description": "Sections for each subheading underneath the rule in the SRD.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIReference"
                }
              }
            }
          }
        ]
      },
      "RuleSection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          }
        ]
      },
      "Monster": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          {
            "type": "object",
            "properties": {
              "size": {
                "description": "The size of the monster ranging from Tiny to Gargantuan.",
                "type": "string",
                "enum": [
                  "Tiny",
                  "Small",
                  "Medium",
                  "Large",
                  "Huge",
                  "Gargantuan"
                ]
              },
              "type": {
                "description": "The type of monster.",
                "type": "string"
              },
              "subtype": {
                "description": "The sub-category of a monster used for classification of monsters.\"",
                "type": "string"
              },
              "alignments": {
                "description": "A creature's general moral and personal attitudes.",
                "type": "string"
              },
              "armor_class": {
                "description": "The difficulty for a player to successfully deal damage to a monster.",
                "type": "number"
              },
              "hit_points": {
                "description": "The hit points of a monster determine how much damage it is able to take before it can be defeated.",
                "type": "number"
              },
              "hit_dice": {
                "description": "The hit die of a monster can be used to make a version of the same monster whose hit points are determined by the roll of the die. For example: A monster with 2d6 would have its hit points determine by rolling a 6 sided die twice.",
                "type": "string"
              },
              "actions": {
                "description": "A list of actions that are available to the monster to take during combat.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "legendary_actions": {
                "description": "A list of legendary actions that are available to the monster to take during combat.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "challenge_rating": {
                "description": "A monster's challenge rating is a guideline number that says when a monster becomes an appropriate challenge against the party's average level. For example. A group of 4 players with an average level of 4 would have an appropriate combat challenge against a monster with a challenge rating of 4 but a monster with a challenge rating of 8 against the same group of players would pose a significant threat.",
                "type": "number"
              },
              "charisma": {
                "description": "The charisma of a monster. A monster's ability to charm or intimidate a player.",
                "type": "number"
              },
              "condition_immunities": {
                "description": "A list of conditions that a monster is immune to.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "constitution": {
                "description": "The constitution of a monster. How sturdy a monster is.\"",
                "type": "number"
              },
              "damage_immunities": {
                "description": "A list of damage types that a monster will take double damage from.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "damage_resistances": {
                "description": "A list of damage types that a monster will take half damage from.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "damage_vulnerabilities": {
                "description": "A list of damage types that a monster will take double damage from.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "dexterity": {
                "description": "The dexterity of a monster. The monster's ability for swift movement or stealth",
                "type": "number"
              },
              "forms": {
                "description": "Only applicable to Lycanthropes that have multiple forms. This links to the other related monster entries that are the same.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/APIReference"
                  }
                ]
              },
              "intelligence": {
                "description": "The intelligence of a monster. The monster's ability to outsmart a player.",
                "type": "number"
              },
              "languages": {
                "description": "The languages a monster is able to speak.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "proficiencies": {
                "description": "A list of proficiencies of a monster.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "reactions?": {
                "description": "A list of reactions that is available to the monster to take during combat.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "senses": {
                "description": "Monsters typically have a passive perception but they might also have other senses to detect players.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "special_abilities?": {
                "description": "A list of the monster's special abilities.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "speed": {
                "description": "Speed for a monster determines how fast it can move per turn.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "strength": {
                "description": "The strength of a monster. How hard a monster can hit a player.",
                "type": "number"
              },
              "wisdom": {
                "description": "The wisdom of a monster. A monster's ability to ascertain the player's plan.",
                "type": "number"
              },
              "xp": {
                "type": "number"
              }
            }
          }
        ]
      },
      "SpellPrereq": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIReference"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of prerequisite.",
                "type": "string"
              }
            }
          }
        ]
      }
    }
  },
  "externalDocs": {
    "description": "Legacy api documentation.",
    "url": "https://www.dnd5eapi.co/docs/"
  }
}
